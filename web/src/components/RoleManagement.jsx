import React, { useState } from 'react';
import './rolemanagement.css';

const rolesData = [
  {
    name: 'Admin',
    description: 'Qu·∫£n tr·ªã to√†n h·ªá th·ªëng',
    permissions: 'Qu·∫£n l√Ω ng∆∞·ªùi d√πng, d·ª± √°n, vai tr√≤, th√¥ng b√°o, c√†i ƒë·∫∑t h·ªá th·ªëng, b√°o c√°o',
    users: 3
  },
  {
    name: 'Project Manager',
    description: 'Qu·∫£n l√Ω d·ª± √°n v√† task',
    permissions: 'T·∫°o d·ª± √°n, giao task, theo d√µi ti·∫øn ƒë·ªô, c·∫≠p nh·∫≠t tr·∫°ng th√°i',
    users: 5
  },
  {
    name: 'Employee',
    description: 'Th·ª±c hi·ªán task ƒë∆∞·ª£c giao',
    permissions: 'Xem task, c·∫≠p nh·∫≠t ti·∫øn ƒë·ªô task, b√°o c√°o c√¥ng vi·ªác',
    users: 10
  },
  {
    name: 'Viewer',
    description: 'Ch·ªâ xem th√¥ng tin',
    permissions: 'Xem d·ª± √°n, xem b√°o c√°o, xem th√¥ng tin ng∆∞·ªùi d√πng',
    users: 2
  },
  {
    name: 'Finance',
    description: 'Qu·∫£n l√Ω t√†i ch√≠nh d·ª± √°n',
    permissions: 'Qu·∫£n l√Ω ng√¢n s√°ch, ph√™ duy·ªát chi ph√≠, b√°o c√°o t√†i ch√≠nh',
    users: 2
  }
];

export default function RoleManagement() {
  const [showModal, setShowModal] = useState(false);
  const [search, setSearch] = useState('');
  const [sortOrder, setSortOrder] = useState('asc');
  const [roles, setRoles] = useState(rolesData);

  const filteredRoles = roles.filter(role =>
    Object.values(role).some(val =>
      String(val).toLowerCase().includes(search.toLowerCase())
    )
  );

  const handleSort = (key) => {
    const sorted = [...roles].sort((a, b) => {
      if (key === 'users') {
        return sortOrder === 'asc' ? a.users - b.users : b.users - a.users;
      }
      return sortOrder === 'asc'
        ? a[key].localeCompare(b[key])
        : b[key].localeCompare(a[key]);
    });
    setRoles(sorted);
    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');
  };

  const handleDelete = (name) => {
    if (window.confirm('B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a vai tr√≤ n√†y?')) {
      setRoles(roles.filter(role => role.name !== name));
    }
  };

  return (
    <div className="role-page">
      <header className="header">
        <div className="header-content">
          <div className="logo">üõ†Ô∏è Project Hub</div>
          <div className="user-info">
            <span>Ch√†o m·ª´ng, <strong>Nguy·ªÖn VƒÉn A</strong> (Admin)</span>
            <div className="user-avatar">NA</div>
          </div>
        </div>
      </header>

      <main className="main-content">
        <div className="section-card">
          <div className="section-header">
            <h2 className="section-title">Qu·∫£n l√Ω Vai tr√≤</h2>
            <div className="filter-bar">
              <input
                type="text"
                className="search-input"
                placeholder="T√¨m ki·∫øm vai tr√≤..."
                value={search}
                onChange={(e) => setSearch(e.target.value)}
              />
              <button className="action-btn" onClick={() => setShowModal(true)}>Th√™m vai tr√≤</button>
            </div>
          </div>

          <div className="table-container">
            <table>
              <thead>
                <tr>
                  <th onClick={() => handleSort('name')}>T√™n vai tr√≤</th>
                  <th onClick={() => handleSort('description')}>M√¥ t·∫£</th>
                  <th>Quy·ªÅn h·∫°n</th>
                  <th onClick={() => handleSort('users')}>S·ªë ng∆∞·ªùi d√πng</th>
                  <th>H√†nh ƒë·ªông</th>
                </tr>
              </thead>
              <tbody>
                {filteredRoles.map((role, idx) => (
                  <tr key={idx}>
                    <td>{role.name}</td>
                    <td>{role.description}</td>
                    <td className="permissions">{role.permissions}</td>
                    <td>{role.users}</td>
                    <td className="action-buttons">
                      <button className="view-btn" onClick={() => alert(`Xem chi ti·∫øt vai tr√≤: ${role.name}`)}>Xem</button>
                      <button className="edit-btn" onClick={() => { setShowModal(true); alert(`Ch·ªânh s·ª≠a vai tr√≤: ${role.name}`); }}>S·ª≠a</button>
                      <button className="delete-btn" onClick={() => handleDelete(role.name)}>X√≥a</button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>

          <div className="pagination">
            <button className="page-btn active">1</button>
            <button className="page-btn">2</button>
            <button className="page-btn">3</button>
          </div>
        </div>

        {showModal && (
          <div className="modal">
            <div className="modal-content">
              <span className="close-btn" onClick={() => setShowModal(false)}>&times;</span>
              <h2 className="section-title">Th√™m Vai tr√≤</h2>
              <div className="modal-form">
                <label>T√™n vai tr√≤</label>
                <input type="text" placeholder="Nh·∫≠p t√™n vai tr√≤" />
                <label>M√¥ t·∫£</label>
                <input type="text" placeholder="Nh·∫≠p m√¥ t·∫£" />
                <label>Quy·ªÅn h·∫°n</label>
                <textarea placeholder="Nh·∫≠p quy·ªÅn h·∫°n"></textarea>
                <button className="action-btn">L∆∞u</button>
              </div>
            </div>
          </div>
        )}
      </main>
    </div>
  );
}
